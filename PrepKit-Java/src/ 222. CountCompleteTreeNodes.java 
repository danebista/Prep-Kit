/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int countNodes(TreeNode root) {
        if(root==null) return 0;
        int left = calculateHeightLeft(root);
        int right = calculateHeightRight(root);
       
        if (left==right) return ((1<<left)-1);
        int leftValue = countNodes(root.left);
        
        int rightValue = countNodes(root.right);
        return 1+leftValue+rightValue;
    }
    
    public int calculateHeightLeft(TreeNode root){
        int count = 0;
        
        while (root!=null){
            root=root.left;
            count++;
        }
        
        return count;
    }
    
    public int calculateHeightRight(TreeNode root){
        int count = 0;
        
        while (root!=null){
            root=root.right;
            count++;
        }
        
        return count;
    }
}
