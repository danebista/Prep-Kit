class Solution {
    public long minimumTime(int[] time, int totalTrips) {
        long l = 1;
        long r = Long.MAX_VALUE;
        long res = Long.MAX_VALUE;

        while (l<=r){
            long mid = l+(r-l)/2;
            if (validTrip(time, mid, totalTrips)){
                res = Math.min(res, mid);
                r=mid-1;
            }
            else {
                l=mid+1;
            }
        }
        return res;
    }

    public boolean validTrip(int[] time, long mid, int totalTrips){
       long count = 0;
       for (int i=0; i< time.length; i++){
           count += (long)mid/time[i];
           if (count>=totalTrips) return true;
       }

       if (count>=totalTrips) return true;
       return false;
    }
}
